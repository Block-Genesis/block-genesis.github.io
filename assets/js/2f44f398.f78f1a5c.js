"use strict";(self.webpackChunkpendle_documentation=self.webpackChunkpendle_documentation||[]).push([[8439],{2330:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return r},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return h},default:function(){return m}});var o=n(3117),a=n(102),i=(n(7294),n(3905)),s=["components"],r={sidebar_position:1},l="Consensus Mechanisms",c={unversionedId:"learn/module-7/consensus-mechanisms",id:"learn/module-7/consensus-mechanisms",title:"Consensus Mechanisms",description:"Consensus algorithms are the basis of all the blockchains/DAGs. They are the most important part of the blockchain/DAG platforms.",source:"@site/docs/learn/module-7/consensus-mechanisms.md",sourceDirName:"learn/module-7",slug:"/learn/module-7/consensus-mechanisms",permalink:"/docs/learn/module-7/consensus-mechanisms",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"sidebarLearn",previous:{title:"Layer 2s",permalink:"/docs/learn/module-6/layer-twos"},next:{title:"Bitcoin",permalink:"/docs/learn/module-7/bitcoin"}},h=[{value:"Proof of Work",id:"proof-of-work",children:[],level:2},{value:"Proof of Stake",id:"proof-of-stake",children:[],level:2}],u={toc:h};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"consensus-mechanisms"},"Consensus Mechanisms"),(0,i.kt)("p",null,"Consensus algorithms are the basis of all the blockchains/DAGs. They are the most important part of the blockchain/DAG platforms."),(0,i.kt)("p",null,"Without them(consensus algorithms) we will be left with just a dumb, immutable database."),(0,i.kt)("p",null,"Here we list all the major consensus algorithms and will evaluate their pros and cons. If you find anything missing or wrong here then shoot that in the comments. Also, the article will be updated regularly as I study more about these algorithms and their economic impacts."),(0,i.kt)("p",null,"P.S. This article assumes that you have an understanding about what is a consensus algorithm and it\u2019s significance in blockchains."),(0,i.kt)("p",null,"Here is a list of 30 consensus algorithms."),(0,i.kt)("h2",{id:"proof-of-work"},"Proof of Work"),(0,i.kt)("p",null,"It is the first consensus algorithm (proposed by Satoshi Nakamoto introduced in his article) to create distributed trustless consensus and solves the double-spend problem. POW is not a new idea, but the way Satoshi combined this and other existing concepts\u200a\u2014\u200acryptographic signatures, merkle chains, and P2P networks\u200a\u2014\u200ainto a viable distributed consensus system, of which cryptocurrency is the first and basic application, was quite innovative."),(0,i.kt)("p",null,"The way it works that the participants of the blockchain(called miners) have to solve a complex but useless computational problem in order to add a block of transactions into the blockchain."),(0,i.kt)("p",null,"Basically, it is done to ensure that the miners are putting some money/resources (mining machines) to do the work, which shows that they won\u2019t harm the blockchain system, cause harming the system will result in losing their investment; thus harming themselves."),(0,i.kt)("p",null,"The difficulty of the problem can be changed in runtime, to ensure the constant block time. Sometimes there is a situation in which more than one miners solve the problem simultaneously. In that case, miners choose one of the chains and the longest chain is considered the winner. So assuming most miners are working on the same chain, that one will grow fastest will be the longest and most trustworthy. Hence Bitcoin is safe as long as more than 50% of the work being put in by miners is honest."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Further Reading")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://en.bitcoin.it/wiki/Proof_of_work"},"Proof of Work")))),(0,i.kt)("h2",{id:"proof-of-stake"},"Proof of Stake"),(0,i.kt)("p",null,"The proof of stake was created as an alternative to the proof of work (PoW), to tackle inherent issues in the latter. Here instead of using mining, you have to have some stake(coins) in the system. So, if you own 10% of the stake(coins), then your probability of mining next block will be 10%."),(0,i.kt)("p",null,"Mining requires a great deal of computing power to run different cryptographic calculations to unlock the computational challenges. The computing power translates into a high amount of electricity and power needed for the proof of work. In 2015, it was estimated that one Bitcoin transaction required the amount of electricity needed to power up 1.57 American households per day. So, in order to save the power wastage PoS was introduced."),(0,i.kt)("p",null,"In PoS, a dollar is a dollar. For example, consider 10,000 miners, each spend $1/min ($87.6M/yr) may have less hashing power than one mining pool that spends $10,000/min (despite also spending $87.6M/yr). But in case of PoS, you can\u2019t use it up all at once. Here a dollar is a dollar. Thus, it is not susceptible to economies of scale."),(0,i.kt)("p",null,'Also, attacking a PoS system is more expensive than attacking a PoW system. Quoting Vlad Zamfir, "the cost profile of a repeated 51% attack in PoS is as if \u201cyour ASIC farm burned down\u201d with each additional round."'),(0,i.kt)("p",null,"This means that you lose your stake every time you do an attack on a PoS system, whereas in PoW you don\u2019t lose your mining equipment or your coins if you attack the system; instead you just make it(attacking a PoW system) hard to execute."),(0,i.kt)("p",null,"But one issue that can arise is the \u201cnothing-at-stake\u201d problem, wherein block generators have nothing to lose by voting for multiple blockchain histories(forks), thereby preventing consensus, from being achieved."),(0,i.kt)("p",null,"Because unlike in proof-of-work systems(where you have to do a lot of computation to extend a chain), there is little cost to working on several chains. Many projects have tried to solve this problem in different ways. For example, as stated above, one of the solution is to punish the bad validators."),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Further Reading")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Proof-of-stake"},"Proof of Stake")))))}m.isMDXComponent=!0},3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return p}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},h=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,h=r(e,["components","mdxType","originalType","parentName"]),m=c(n),p=a,d=m["".concat(l,".").concat(p)]||m[p]||u[p]||i;return n?o.createElement(d,s(s({ref:t},h),{},{components:n})):o.createElement(d,s({ref:t},h))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:a,s[1]=r;for(var c=2;c<i;c++)s[c]=n[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);